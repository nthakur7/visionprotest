#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Sphere_Left", "Sphere_Right", "GridMaterial", "StereoMaterial"]
    def "GridMaterial" (
        active = true
        references = @Materials/GridMaterial.usda@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Material "StereoMaterial"
    {
        reorder nameChildren = ["PreviewSurface", "GeometrySwitchCameraIndex", "Left", "Right"]
        asset inputs:left = @leftbridge.jpeg@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-601.33044, 96.69333)
                    float2 sizeInSubgraph = (115.5, 57.5)
                    int stackingOrderInSubgraph = 62
                }
            }
        )
        asset inputs:right = @rightbridge.jpeg@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-599.0572, 187.0759)
                    float2 sizeInSubgraph = (115.5, 57.5)
                    int stackingOrderInSubgraph = 62
                }
            }
        )
        prepend token outputs:mtlx:surface.connect = </Root/StereoMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (338.2578, 104.73047)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 105.5)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 35

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/StereoMaterial/GeometrySwitchCameraIndex.outputs:out>
            float inputs:metallic
            float3 inputs:normal
            float inputs:opacity
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (110.67578, 103.14844)
            float2 ui:nodegraph:node:size = (159.5, 324.5)
            int ui:nodegraph:node:stackingOrder = 42
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:roughness", "Advanced", "inputs:normal"]
        }

        def Shader "GeometrySwitchCameraIndex"
        {
            uniform token info:id = "ND_realitykit_geometry_switch_cameraindex_color3"
            color3f inputs:left.connect = </Root/StereoMaterial/Left.outputs:out>
            color3f inputs:mono.connect = None
            color3f inputs:right.connect = </Root/StereoMaterial/Right.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-131.70312, 91.30859)
            float2 ui:nodegraph:node:size = (237, 153.5)
            int ui:nodegraph:node:stackingOrder = 33
        }

        def Shader "Left"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default = (0.14457169, 0.25208995, 0.6611406) (
                colorSpace = "srgb_texture"
            )
            asset inputs:file = @20221220_165726.jpg@ (
                colorSpace = "srgb_texture"
            )
            asset inputs:file.connect = </Root/StereoMaterial.inputs:left>
            string inputs:filtertype
            float2 inputs:texcoord
            string inputs:uaddressmode
            string inputs:vaddressmode
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-396.51996, 57.692337)
            float2 ui:nodegraph:node:size = (148.5, 210.5)
            int ui:nodegraph:node:stackingOrder = 61
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:uaddressmode", "inputs:default"]
        }

        def Shader "Right"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default = (0.8230852, 0.16506532, 0.40631282) (
                colorSpace = "srgb_texture"
            )
            asset inputs:file = @right_eye_example.png@ (
                colorSpace = "srgb_texture"
            )
            asset inputs:file.connect = </Root/StereoMaterial.inputs:right>
            string inputs:filtertype
            float2 inputs:texcoord
            string inputs:uaddressmode
            string inputs:vaddressmode
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-424.65625, 283.07812)
            float2 ui:nodegraph:node:size = (148.5, 210.5)
            int ui:nodegraph:node:stackingOrder = 47
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:texcoord", "inputs:texcoord", "inputs:file"]
        }
    }

    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/StereoMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.00086793303, -0.47841024, -1.6149915)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }
}

